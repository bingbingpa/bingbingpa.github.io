{"componentChunkName":"component---src-templates-category-template-js","path":"/category/spring-reactive/","result":{"data":{"allMarkdownRemark":{"totalCount":3,"edges":[{"node":{"fields":{"slug":"/cold-sequence-hot-sequence/"},"excerpt":"📘 스프링으로 시작하는 리액티브 프로그래밍 챕터 7 Cold Sequence  Subscriber 가 구독할 때마다 데이터 흐름이 처음부터 다시 시작되는 sequence 이다. 마블 다이어그램을 보면 위쪽에 위치한 Subscriber A…","timeToRead":2,"frontmatter":{"title":"Cold Sequence 와 Hot Sequence","category":"spring-reactive"}}},{"node":{"fields":{"slug":"/reactor-marble-diagram/"},"excerpt":"📘 스프링으로 시작하는 리액티브 프로그래밍 챕터 5~6 Reactor 특징 리액티브 스트림즈의 구현체인  는 리액티브 프로그래밍을 위한 라이브러리이며,\nReactor Core 라이브러리는 Spring WebFlux…","timeToRead":4,"frontmatter":{"title":"Reactor 특징과 마블다이어그램","category":"spring-reactive"}}},{"node":{"fields":{"slug":"/reactive-streams/"},"excerpt":"📘 스프링으로 시작하는 리액티브 프로그래밍 챕터 1~…","timeToRead":8,"frontmatter":{"title":"reactive streams 개념 정리와 spring webMVC 와 webFlux 코드 비교","category":"spring-reactive"}}}]}},"pageContext":{"category":"spring-reactive"}},"staticQueryHashes":["960164547","960164547"]}