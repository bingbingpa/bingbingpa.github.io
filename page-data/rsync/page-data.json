{"componentChunkName":"component---src-templates-post-template-js","path":"/rsync/","result":{"data":{"post":{"id":"d0ee5bb7-20dd-56e2-be3c-2bdcb030a202","html":"<h2>1. ssh 설정</h2>\n<ul>\n<li>\n<p>rsync를 통한 파일 동기화를 스케줄을 실행해 같은 시간에 반복적으로 돌릴 경우 원격 서버 접속시 패스워드를 묻게 되므로 ssh key를 설정하여 스케줄을 실행 할 때 패스워드를 사용하지 않고 접속하도록 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ ssh-keygen</code></pre></div>\n</li>\n<li>\n<p>입력창에 엔터를 쳐서 key를 생성하고 생성된 key를 동기화에 사용할 서버에 카피한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ ssh-copy-id -i id_rsa.pub <span class=\"token string\">\"원격접속계정\"</span>@<span class=\"token string\">\"원격접속IP\"</span></code></pre></div>\n</li>\n<li>\n<p>ssh의 커넥션 시간을 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token operator\">&lt;</span>Master<span class=\"token operator\">></span>\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/ssh/ssh_config\nHost *\n  ServerAliveInterval <span class=\"token number\">60</span>\n  ServerAliveCountMax <span class=\"token number\">6</span>\n\n<span class=\"token operator\">&lt;</span>Slave<span class=\"token punctuation\">(</span>동기화할 원격서버<span class=\"token punctuation\">)</span><span class=\"token operator\">></span>\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/ssh/ssh_config\nHost *\n  ClientAliveInterval <span class=\"token number\">60</span>\n  ClientAliveCountMax <span class=\"token number\">6</span></code></pre></div>\n</li>\n<li>\n<p>원격 서버에 ssh로 접속해서 패스워드를 묻지 않고 바로 접속이 되는지 테스트 해본다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">ssh</span> <span class=\"token string\">\"원격접속계정\"</span>@<span class=\"token string\">\"원격접속IP\"</span></code></pre></div>\n</li>\n</ul>\n<h2>2. rsync 설치</h2>\n<ul>\n<li>\n<p>master 서버와 slave 서버에 모두 rsync를 설치 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> <span class=\"token function\">rsync</span>\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">service</span> rsyncd start</code></pre></div>\n</li>\n<li>master/slave 모두 정상적으로 rsync 데몬이 실행중인지 status를 확인 한다(sudo service rsyncd status)</li>\n</ul>\n<h2>3. 네트워크 대역폭 확인</h2>\n<ul>\n<li>rsync로 파일 동기화시에 네트워크 대역폭을 설정하지 않으면 전송되는 파일의 크기가 클 경우 rsync가 많은 네트워크 대역을 사용하기 때문에 다른 서비스에 영향을 줄 수 있기 때문에 네트워크 대역폭을 확인하고 적절하게 네트워크 대역의 limit를 설정한다.</li>\n<li>임의의 파일을 하나 생성하고 rsync로 원격 서버에 동기화 하는 시간을 살펴본다.</li>\n<li>\n<p>파일 전송에 걸리는 초당 시간을 확인하고 rsync의 전송 네트워크 대역폭을 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span>/dev/zero <span class=\"token assign-left variable\">of</span><span class=\"token operator\">=</span><span class=\"token string\">\"파일명\"</span> <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">1024000</span> <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span><span class=\"token number\">1024</span>\n$ <span class=\"token function\">time</span> <span class=\"token function\">rsync</span> -v <span class=\"token string\">\"생성한파일\"</span> <span class=\"token string\">\"원격접속계정\"</span>@<span class=\"token string\">\"원격 서버\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"파일생성위치\"</span></code></pre></div>\n</li>\n</ul>\n<h2>4. 스케줄링</h2>\n<ul>\n<li>\n<p>crontab을 이용하여 매일 같은 시간에 동기화가 되도록 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">　* * * * * <span class=\"token string\">\"실행할 커맨드\"</span></code></pre></div>\n</li>\n<li>각각 분, 시간, 일, 월, 요일을 의미하며 개행을 하지 않고 한줄에 모두 써야 한다.</li>\n<li>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Field</th>\n<th align=\"center\">Description</th>\n<th align=\"center\">Allowed Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">MIN</td>\n<td align=\"center\">Minute field</td>\n<td align=\"center\">0 to 59</td>\n</tr>\n<tr>\n<td align=\"center\">HOUR</td>\n<td align=\"center\">Hour field</td>\n<td align=\"center\">0 to 23</td>\n</tr>\n<tr>\n<td align=\"center\">DOM</td>\n<td align=\"center\">Day of Month</td>\n<td align=\"center\">1-31</td>\n</tr>\n<tr>\n<td align=\"center\">MON</td>\n<td align=\"center\">Month field</td>\n<td align=\"center\">1-12</td>\n</tr>\n<tr>\n<td align=\"center\">DOW</td>\n<td align=\"center\">Day Of Week</td>\n<td align=\"center\">0-6</td>\n</tr>\n<tr>\n<td align=\"center\">CMD</td>\n<td align=\"center\">Command</td>\n<td align=\"center\">Any command to be executed.</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>crontab -e 를 커맨드창에 입력하여 입력창이 나오면 아래와 같이 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">crontab</span> -e\n　* 00 * * * <span class=\"token function\">rsync</span> -avz --delete --bwlimit<span class=\"token operator\">=</span><span class=\"token string\">\"네트워크대역폭\"</span> --log-file<span class=\"token operator\">=</span><span class=\"token string\">\"로그파일위치\"</span> <span class=\"token string\">\"master동기화경로\"</span> <span class=\"token string\">\"원격접속계정\"</span>@<span class=\"token string\">\"원격접속IP\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"slave동기화경로\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">:wq<span class=\"token punctuation\">(</span>저장<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>위에 설정한 내용은 다음과 같다. 매일 00시에 해당 커맨드를 실행하여 master와 slave의 디렉토리를 동기화하고 로그파일은 지정한 위치에 생성되고 bwlimit옵션에 설정한 네트워크 대역폭으로 해당 파일들을 전송하며, —delete옵션에 의해 mater에서 삭제된 파일은 slave에서 삭제되게 된다.</li>\n</ul>","fields":{"slug":"/rsync/","prefix":"2019-08-17"},"frontmatter":{"title":"rsync를 이용한 파일 동기화","category":"infra"}},"authornote":{"id":"265dda60-7971-5464-926f-ea569c79ac0a","html":"<p>🔘 안되면 될 때 까지! 🏃 🔘</p>"}},"pageContext":{"slug":"/rsync/","prev":{"id":"e0d2d227-4d88-52d2-ad45-681aab57f7b5","fields":{"slug":"/postgresql-replication/","prefix":"2019-08-17","source":"posts"},"frontmatter":{"title":"postgreSQL Replication","category":"database"}},"next":{"id":"2d75ed06-3c2c-5fca-a0a3-1607ca61e39f","fields":{"slug":"/ubuntu-jdk/","prefix":"2019-08-18","source":"posts"},"frontmatter":{"title":"Ubuntu java 버전 변경하기","category":"infra"}},"source":"posts"}},"staticQueryHashes":["960164547","960164547"]}