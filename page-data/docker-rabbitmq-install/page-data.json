{"componentChunkName":"component---src-templates-post-template-js","path":"/docker-rabbitmq-install/","result":{"data":{"post":{"id":"df62f11c-d8d3-5991-b3ec-5678f46eb6c0","html":"<h3>1. 필요 패키지 다운로드</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    <span class=\"token function\">wget</span> https://packages.erlang-solutions.com/erlang/rpm/centos/8/x86_64/esl-erlang_23.0.2-2~centos~8_amd64.rpm\n    <span class=\"token function\">wget</span> https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.8.5/rabbitmq-server-3.8.5-1.el7.noarch.rpm</code></pre></div>\n<h3>2. Erlang, rabbitMQ 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    dnf -y <span class=\"token function\">install</span> esl-erlang_23.0.2-2~centos~8_amd64.rpm\n    dnf -y <span class=\"token function\">install</span> rabbitmq-server-3.8.5-1.el7.noarch.rpm</code></pre></div>\n<h3>3. 자동 재시작 등록</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    systemctl <span class=\"token builtin class-name\">enable</span> rabbitmq-server\n    systemctl daemon-reload</code></pre></div>\n<h3>4. rabbitMQ 관리자 플러그인 enable 설정</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    ./usr/sbin/rabbitmq-plugins <span class=\"token builtin class-name\">enable</span> rabbitmq_management</code></pre></div>\n<h3>5. 설정파일 작성</h3>\n<ul>\n<li>\n<p>advanced.config 파일 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/rabbitmq/advanced.config</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n   <span class=\"token punctuation\">{</span>rabbit<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token punctuation\">{</span>loopback_users<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n\t\t\t <span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{</span>rabbitmq_management<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n                           <span class=\"token punctuation\">{</span>load_definitions<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/etc/rabbitmq/definitions.json\"</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">]</span>.</code></pre></div>\n</li>\n<li>\n<p>definitions.json 작성 : 여기에 실제로 사용할 유저 및 queue 와 exchange 설정을 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> /etc/rabbitmq/definitions.json</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t <span class=\"token property\">\"rabbit_version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3.8.5\"</span><span class=\"token punctuation\">,</span>\n\t\t  <span class=\"token property\">\"users\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t    <span class=\"token punctuation\">{</span>\n\t\t\t\t\t   <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lhdt\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token property\">\"password_hash\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"XSBSynnbW/DxugD+NGvuN7mFfXMdxaA3NaIOjML7QHkajUxW\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token property\">\"hashing_algorithm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rabbit_password_hashing_sha256\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token property\">\"tags\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"administrator\"</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t   <span class=\"token property\">\"vhosts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t     <span class=\"token punctuation\">{</span>\n\t\t\t\t    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span>\n\t\t\t\t\t\t  <span class=\"token punctuation\">}</span>\n\t   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t    <span class=\"token property\">\"permissions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t  <span class=\"token punctuation\">{</span>\n\t\t\t\t     <span class=\"token property\">\"user\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lhdt\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t <span class=\"token property\">\"vhost\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t <span class=\"token property\">\"configure\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".*\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t <span class=\"token property\">\"write\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".*\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t <span class=\"token property\">\"read\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".*\"</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t <span class=\"token property\">\"parameters\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t  <span class=\"token property\">\"policies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t   <span class=\"token property\">\"queues\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t   <span class=\"token punctuation\">{</span>\n\t\t\t         <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"f4d.converter.queue\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t <span class=\"token property\">\"vhost\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t <span class=\"token property\">\"durable\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t <span class=\"token property\">\"auto_delete\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t <span class=\"token property\">\"arguments\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\t\t  <span class=\"token punctuation\">}</span>\n\t\t   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t    <span class=\"token property\">\"exchanges\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"f4d.converter\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t  <span class=\"token property\">\"vhost\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"topic\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t  <span class=\"token property\">\"durable\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t  <span class=\"token property\">\"auto_delete\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t  <span class=\"token property\">\"internal\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t  <span class=\"token property\">\"arguments\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\t\t      <span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t <span class=\"token property\">\"bindings\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>패스워드 암호화에는 다음의 파이썬 스크립트를 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># details on rabbitMQ password hashing</span>\n<span class=\"token comment\"># https://www.rabbitmq.com/passwords.html#computing-password-hash</span>\n\n<span class=\"token keyword\">from</span> __future__ <span class=\"token keyword\">import</span> print_function\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> struct\n<span class=\"token keyword\">import</span> getpass\n\n<span class=\"token comment\"># This is the password we wish to encode</span>\npassword1 <span class=\"token operator\">=</span> getpass<span class=\"token punctuation\">.</span>getpass<span class=\"token punctuation\">(</span><span class=\"token string\">\"password: \"</span><span class=\"token punctuation\">)</span>\npassword2 <span class=\"token operator\">=</span> getpass<span class=\"token punctuation\">.</span>getpass<span class=\"token punctuation\">(</span><span class=\"token string\">\"again: \"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> password1 <span class=\"token operator\">!=</span> password2<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"passwords do not match\"</span><span class=\"token punctuation\">)</span>\n  exit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 1.Generate a random 32 bit salt:</span>\n<span class=\"token comment\"># This will generate 32 bits of random data:</span>\nsalt <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>urandom<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 2.Concatenate that with the UTF-8 representation of the password</span>\ntmp0 <span class=\"token operator\">=</span> salt <span class=\"token operator\">+</span> password1<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3. Take the SHA256 hash and get the bytes back</span>\ntmp1 <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span>tmp0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 4. Concatenate the salt again:</span>\nsalted_hash <span class=\"token operator\">=</span> salt <span class=\"token operator\">+</span> tmp1\n\n<span class=\"token comment\"># 5. convert to base64 encoding:</span>\npass_hash <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>salted_hash<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pass_hash<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>참고</p>\n<ul>\n<li>로그 파일 위치 : /var/log/rabbitmq</li>\n<li>설정 파일 위치 : /etc/rabbitmq</li>\n<li>실행 파일 위치 : /usr/sbin/rabbitmq-server</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/docker-rabbitmq-install/","prefix":"2020-07-28"},"frontmatter":{"title":"docker rabbitMQ 설정 하기","category":"docker"}},"authornote":{"id":"265dda60-7971-5464-926f-ea569c79ac0a","html":"<p>🔘 안되면 될 때 까지! 🏃 🔘</p>"}},"pageContext":{"slug":"/docker-rabbitmq-install/","prev":{"id":"2224768d-a3dc-538a-aef3-8fe86fd173e9","fields":{"slug":"/docker-container-setting/","prefix":"2020-06-30","source":"posts"},"frontmatter":{"title":"docker container 기본 설정","category":"docker"}},"next":{"id":"5ac70bb7-99bb-5951-bcb5-c13e533f26ad","fields":{"slug":"/intellij-encoding/","prefix":"2020-08-12","source":"posts"},"frontmatter":{"title":"intellij 테스트 코드 한글 깨짐 해결 방법","category":"ide"}},"source":"posts"}},"staticQueryHashes":["960164547","960164547"]}