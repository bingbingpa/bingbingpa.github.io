{"version":3,"sources":["webpack:///./src/components/Article/Bodytext.js","webpack:///./src/components/Article/Article.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/components/Post/Meta.js","webpack:///./src/components/Post/Author.js","webpack:///./src/components/Post/NextPrev.js","webpack:///./src/components/Post/Comments.js","webpack:///./src/components/Post/Post.js","webpack:///./src/templates/PostTemplate.js"],"names":["Bodytext","props","html","className","dangerouslySetInnerHTML","__html","Article","children","Headline","title","Fragment","Meta","prefix","category","size","to","split","join","Author","note","src","config","gravatarImgMd5","alt","siteTitle","NextPrev","next","fields","nextPrefix","nextSlug","slug","frontmatter","nextTitle","prev","prevPrefix","prevSlug","prevTitle","Comments","element","createRef","useEffect","current","utterances","document","createElement","attributes","repo","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","Post","post","authornote","nextPost","prevPost","require","PostTemplate","data","authorNote","pageContext","Consumer","Seo"],"mappings":"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","file":"component---src-templates-post-template-js-dd92b58e687c0d5ee5f5.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./bodytext.scss\";\n\nconst Bodytext = props => {\n  const { html } = props;\n\n  return <div className=\"bodytext\" dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nBodytext.propTypes = {\n  html: PropTypes.string.isRequired\n};\n\nexport default Bodytext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./article.scss\";\n\nconst Article = props => {\n  const { children } = props;\n\n  return <article className=\"article\">{children}</article>;\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./headline.scss\";\n\nconst Headline = props => {\n  const { title, children } = props;\n\n  return (\n    <React.Fragment>\n      {title ? (\n        <h1 className=\"h1-headline\">{title}</h1>\n      ) : (\n        <h1 className=\"h1-headline\">{children}</h1>\n      )}\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node\n};\n\nexport default Headline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nimport { FaCalendar } from \"react-icons/fa/\";\nimport { FaUser } from \"react-icons/fa/\";\nimport { FaTag } from \"react-icons/fa/\";\n\nimport \"./meta.scss\";\n\nconst Meta = props => {\n  const { prefix, category } = props;\n\n  return (\n    <p className=\"meta\">\n      <span className=\"span-meta\">\n        <FaCalendar size={18} /> {prefix}\n      </span>\n      {/*<span>*/}\n      {/*  <FaUser size={18} /> {authorName}*/}\n      {/*</span>*/}\n      {category && (\n        <span className=\"span-meta\">\n          <FaTag size={18} />\n          <Link to={`/category/${category.split(\" \").join(\"-\")}`}>{category}</Link>\n        </span>\n      )}\n    </p>\n  );\n};\n\nMeta.propTypes = {\n  prefix: PropTypes.string.isRequired,\n  category: PropTypes.string\n};\n\nexport default Meta;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport config from \"../../../content/meta/config\";\n\nimport \"./author.scss\";\n\nconst Author = props => {\n  const { note } = props;\n\n  return (\n    <React.Fragment>\n      <div className=\"author\">\n        <div className=\"avatar\">\n          <img src={config.gravatarImgMd5} alt={config.siteTitle} />\n        </div>\n        <div className=\"note\" dangerouslySetInnerHTML={{ __html: note }} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nAuthor.propTypes = {\n  note: PropTypes.string.isRequired\n};\n\nexport default Author;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nimport { FaArrowRight } from \"react-icons/fa/\";\nimport { FaArrowLeft } from \"react-icons/fa/\";\n\nimport \"./nextPrev.scss\";\n\nconst NextPrev = props => {\n  const {\n    next: {\n      fields: { prefix: nextPrefix, slug: nextSlug } = {},\n      frontmatter: { title: nextTitle } = {}\n    } = {},\n    prev: {\n      fields: { prefix: prevPrefix, slug: prevSlug } = {},\n      frontmatter: { title: prevTitle } = {}\n    } = {}\n  } = props;\n\n  return (\n    <React.Fragment>\n      <div className=\"links\">\n        {nextSlug && (\n          <Link to={nextSlug}>\n            <FaArrowRight />\n            <h4>\n              {nextTitle} <time>{nextPrefix} </time>\n            </h4>\n          </Link>\n        )}\n        {prevSlug && (\n          <Link to={prevSlug}>\n            <FaArrowLeft />\n            <h4>\n              {prevTitle} <time>{prevPrefix}</time>\n            </h4>\n          </Link>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nNextPrev.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object\n};\n\nexport default NextPrev;\n","import React, { createRef, useEffect } from \"react\";\nimport config from \"../../../content/meta/config\";\n\nconst src = \"https://utteranc.es/client.js\";\nconst Comments = () => {\n  const element = createRef();\n\n  useEffect(() => {\n    if (element.current === null) return;\n    const utterances = document.createElement(\"script\");\n\n    const attributes = {\n      src,\n      repo: config.repo,\n      \"issue-term\": \"pathname\",\n      label: \"Comment\",\n      theme: `github-light`,\n      crossorigin: \"anonymous\",\n      async: \"true\"\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    element.current.appendChild(utterances);\n  }, []);\n\n  return <div ref={element} />;\n};\n\nexport default Comments;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"prismjs/themes/prism-okaidia.css\";\n\nimport Headline from \"../Article/Headline\";\nimport Bodytext from \"../Article/Bodytext\";\nimport Meta from \"./Meta\";\nimport Author from \"./Author\";\nimport NextPrev from \"./NextPrev\";\nimport Comments from \"./Comments\";\n\nconst Post = props => {\n  const {\n    post: {\n      html,\n      fields: { prefix },\n      frontmatter: { title, category }\n    },\n    authornote,\n    next: nextPost,\n    prev: prevPost\n  } = props;\n\n  return (\n    <React.Fragment>\n      <header>\n        <Headline title={title} />\n        <Meta prefix={prefix} category={category} />\n      </header>\n      <Bodytext html={html} />\n      <footer>\n        <Author note={authornote} />\n        <NextPrev next={nextPost} prev={prevPost} />\n        <Comments />\n      </footer>\n    </React.Fragment>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  authornote: PropTypes.string.isRequired,\n  next: PropTypes.object,\n  prev: PropTypes.object\n};\n\nexport default Post;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nrequire(\"prismjs/themes/prism-okaidia.css\");\n\nimport Seo from \"../components/Seo\";\nimport Article from \"../components/Article\";\nimport Post from \"../components/Post\";\nimport { ThemeContext } from \"../layouts\";\n\nconst PostTemplate = props => {\n  const {\n    data: {\n      post,\n      authornote: { html: authorNote }\n    },\n    pageContext: { next, prev }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <Post post={post} next={next} prev={prev} authornote={authorNote} theme={theme} />\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo data={post} />\n    </React.Fragment>\n  );\n};\n\nPostTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired\n};\n\nexport default PostTemplate;\n\n//eslint-disable-next-line no-undef\nexport const postQuery = graphql`\n  query PostBySlug($slug: String!) {\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        prefix\n      }\n      frontmatter {\n        title\n        category\n      }\n    }\n    authornote: markdownRemark(fileAbsolutePath: { regex: \"/author/\" }) {\n      id\n      html\n    }\n  }\n`;\n"],"sourceRoot":""}