{"version":3,"sources":["webpack:///./src/components/Article/Article.js","webpack:///./src/components/List/List.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/templates/CategoryTemplate.js"],"names":["Article","props","children","className","List","edges","Fragment","map","edge","node","title","frontmatter","slug","fields","key","to","Headline","CategoryTemplate","category","pageContext","data","allMarkdownRemark","totalCount","Consumer","theme"],"mappings":"uJAeeA,G,UAVC,SAAAC,GACd,IAAQC,EAAaD,EAAbC,SAER,OAAO,6BAASC,UAAU,WAAWD,M,yGC2BxBE,G,UA7BF,SAAAH,GACX,IAAQI,EAAUJ,EAAVI,MAER,OACE,kBAAC,IAAMC,SAAP,KACE,wBAAIH,UAAU,WACXE,EAAME,KAAI,SAAAC,GACT,MAKIA,EAJFC,KACiBC,EAFnB,EAEIC,YAAeD,MACLE,EAHd,EAGIC,OAAUD,KAId,OACE,wBAAIT,UAAU,UAAUW,IAAKF,GAC3B,kBAAC,OAAD,CAAMG,GAAIH,GAAOF,Y,uGCtB/B,mCAwBeM,IAnBE,SAAAf,GACf,IAAQS,EAAoBT,EAApBS,MAAOR,EAAaD,EAAbC,SAEf,OACE,kBAAC,IAAMI,SAAP,KACGI,EACC,wBAAIP,UAAU,eAAeO,GAE7B,wBAAIP,UAAU,eAAeD,M,kCCbrC,wGAgDee,UAtCU,SAAAhB,GACvB,IACiBiB,EAIbjB,EAJFkB,YAAeD,SADjB,EAKIjB,EAHFmB,KACEC,kBAAqBC,EAHzB,EAGyBA,WAAYjB,EAHrC,EAGqCA,MAIrC,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,eAAaiB,SAAd,MACG,SAAAC,GAAK,OACJ,kBAAC,IAAD,CAASA,MAAOA,GACd,gCACE,kBAAC,IAAD,CAAUA,MAAOA,GACf,mDADF,IACiC,kBAAC,IAAD,MAC9BN,GAEH,uBAAGf,UAAU,QAAb,SACSmB,EAAa,EAAI,MAAQ,KADlC,IACwC,gCAASA,GADjD,QAEGA,EAAa,EAAI,IAAM,GAF1B,qBAIA,kBAAC,IAAD,CAAMjB,MAAOA,EAAOmB,MAAOA,SAMnC,kBAAC,IAAD","file":"component---src-templates-category-template-js-3180f369f1d32d0f3a3e.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./article.scss\";\n\nconst Article = props => {\n  const { children } = props;\n\n  return <article className=\"article\">{children}</article>;\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nimport \"./list.scss\";\n\nconst List = props => {\n  const { edges } = props;\n\n  return (\n    <React.Fragment>\n      <ul className=\"ul-list\">\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li className=\"li-list\" key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired\n};\n\nexport default List;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./headline.scss\";\n\nconst Headline = props => {\n  const { title, children } = props;\n\n  return (\n    <React.Fragment>\n      {title ? (\n        <h1 className=\"h1-headline\">{title}</h1>\n      ) : (\n        <h1 className=\"h1-headline\">{children}</h1>\n      )}\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node\n};\n\nexport default Headline;\n","import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\n\nconst CategoryTemplate = props => {\n  const {\n    pageContext: { category },\n    data: {\n      allMarkdownRemark: { totalCount, edges }\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline theme={theme}>\n                <span>Posts in category</span> <FaTag />\n                {category}\n              </Headline>\n              <p className=\"meta\">\n                There {totalCount > 1 ? \"are\" : \"is\"} <strong>{totalCount}</strong> post\n                {totalCount > 1 ? \"s\" : \"\"} in the category.\n              </p>\n              <List edges={edges} theme={theme} />\n            </header>\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo />\n    </React.Fragment>\n  );\n};\n\nCategoryTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired\n};\n\nexport default CategoryTemplate;\n\n// eslint-disable-next-line no-undef\nexport const categoryQuery = graphql`\n  query PostsByCategory($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___prefix], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}