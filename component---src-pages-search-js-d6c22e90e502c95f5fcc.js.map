{"version":3,"sources":["webpack:///./src/components/Search/Search.js","webpack:///./src/pages/search.js","webpack:///./src/components/Article/Article.js","webpack:///./src/components/List/List.js","webpack:///./src/components/Blog/Item.js","webpack:///./src/components/Blog/Blog.js"],"names":["Search","props","edges","useState","filteredData","query","state","setState","Fragment","Article","className","placeholder","onChange","event","target","value","filter","post","node","frontmatter","description","title","toLowerCase","includes","Blog","posts","map","index","renderSearchResult","SearchPage","data","search","Seo","children","List","edge","slug","fields","key","to","Item","excerpt","prefix","category","size"],"mappings":"gNAkEeA,EAzDA,SAAAC,GACb,IAAQC,EAAUD,EAAVC,MAGR,EAA0BC,mBAAS,CACjCC,aAAc,GACdC,MAJiB,KAEZC,EAAP,KAAcC,EAAd,KAoCA,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKC,UAAU,eACb,2BAAOA,UAAU,eAAeC,YAAY,SAASC,SAnCnC,SAAAC,GACxB,IAAMR,EAAQQ,EAAMC,OAAOC,MAGrBX,GAFQF,GAAS,IAEIc,QAAO,SAAAC,GAChC,MAA+BA,EAAKC,KAAKC,YAAjCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,MACrB,OACGD,GAAeA,EAAYE,cAAcC,SAASlB,EAAMiB,gBACxDD,GAASA,EAAMC,cAAcC,SAASlB,EAAMiB,kBAIjDf,EAAS,CACPF,QACAD,oBAsBI,kBAAC,IAAD,OAEF,kBAACoB,EAAA,EAAD,CAAMC,MApBe,WACzB,IAAQpB,EAAwBC,EAAxBD,MAAOD,EAAiBE,EAAjBF,aAETqB,EADmBrB,GA3BR,KA2BwBC,EACRD,EAAe,GAEhD,OACEqB,GACAA,EAAMC,KAAI,SAACR,EAAMS,GACf,OAAOT,KAYMU,Q,sBC5BNC,UAnBI,SAAA5B,GACjB,IAEqBC,EAEjBD,EAHF6B,KACEC,OAAU7B,MAId,OACE,kBAAC,IAAMM,SAAP,KACE,kBAAC,EAAD,CAAQN,MAAOA,IACf,kBAAC8B,EAAA,EAAD,S,6FCJSvB,G,UAVC,SAAAR,GACd,IAAQgC,EAAahC,EAAbgC,SAER,OAAO,6BAASvB,UAAU,WAAWuB,M,yGC2BxBC,G,UA7BF,SAAAjC,GACX,IAAQC,EAAUD,EAAVC,MAER,OACE,kBAAC,IAAMM,SAAP,KACE,wBAAIE,UAAU,WACXR,EAAMwB,KAAI,SAAAS,GACT,MAKIA,EAJFjB,KACiBG,EAFnB,EAEIF,YAAeE,MACLe,EAHd,EAGIC,OAAUD,KAId,OACE,wBAAI1B,UAAU,UAAU4B,IAAKF,GAC3B,kBAAC,OAAD,CAAMG,GAAIH,GAAOf,Y,wOCsChBmB,G,UAlDF,SAAAvC,GACX,MAaIA,EAZFgB,KACEwB,EAFJ,EAEIA,QAFJ,IAGIJ,OAAUD,EAHd,EAGcA,KAAMM,EAHpB,EAGoBA,OAHpB,IAIIvB,YACEE,EALN,EAKMA,MACAsB,EANN,EAMMA,SASN,OACE,kBAAC,IAAMnC,SAAP,KACE,wBAAIE,UAAU,WACZ,kBAAC,OAAD,CAAM6B,GAAIH,EAAME,IAAKF,EAAM1B,UAAU,QAInC,wBAAIA,UAAU,WACXW,EADH,IACU,kBAAC,IAAD,CAAcX,UAAU,WAElC,uBAAGA,UAAU,aACX,8BACE,kBAAC,IAAD,CAAYkC,KAAM,KADpB,IAC4BF,GAK3BC,GACC,8BACE,kBAAC,IAAD,CAAOC,KAAM,KADf,IACuBD,IAI3B,uBAAGjC,UAAU,gBAAgB+B,QChBxBjB,G,UA1BF,SAAAvB,GACX,IAAQwB,EAAUxB,EAAVwB,MAER,OACE,kBAAC,IAAMjB,SAAP,KACE,0BAAME,UAAU,QACd,wBAAIA,UAAU,WACXe,EAAMC,KAAI,SAAAT,GACT,IACEC,EAIED,EAJFC,KAEYkB,EAEVnB,EAHFC,KACEmB,OAAUD,KAGd,OAAO,kBAAC,EAAD,CAAME,IAAKF,EAAMnB,KAAMC","file":"component---src-pages-search-js-d6c22e90e502c95f5fcc.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport List from \"../List\";\nimport Article from \"../Article\";\nimport { AiOutlineSearch } from \"react-icons/all\";\n\nimport \"./search.scss\";\nimport Blog from \"../Blog\";\n\nconst Search = props => {\n  const { edges } = props;\n  const emptyQuery = \"\";\n\n  const [state, setState] = useState({\n    filteredData: [],\n    query: emptyQuery\n  });\n\n  const handleInputChange = event => {\n    const query = event.target.value;\n    const posts = edges || [];\n\n    const filteredData = posts.filter(post => {\n      const { description, title } = post.node.frontmatter;\n      return (\n        (description && description.toLowerCase().includes(query.toLowerCase())) ||\n        (title && title.toLowerCase().includes(query.toLowerCase()))\n      );\n    });\n\n    setState({\n      query,\n      filteredData\n    });\n  };\n\n  const renderSearchResult = () => {\n    const { query, filteredData } = state;\n    const hasSearchResults = filteredData && query !== emptyQuery;\n    const posts = hasSearchResults ? filteredData : [];\n\n    return (\n      posts &&\n      posts.map((node, index) => {\n        return node;\n      })\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Article>\n        <div className=\"form-search\">\n          <input className=\"input-search\" placeholder=\"search\" onChange={handleInputChange} />\n          <AiOutlineSearch />\n        </div>\n        <Blog posts={renderSearchResult()} />\n      </Article>\n    </React.Fragment>\n  );\n};\n\nSearch.propTypes = {\n  edges: PropTypes.array.isRequired\n};\n\nexport default Search;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Search from \"../components/Search\";\nimport Seo from \"../components/Seo\";\n\nimport \"./search.scss\";\n\nconst SearchPage = props => {\n  const {\n    data: {\n      search: { edges: edges }\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <Search edges={edges} />\n      <Seo />\n    </React.Fragment>\n  );\n};\n\nSearchPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default SearchPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query SearchQuery {\n    search: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts/[0-9]+.*--/\" } }\n      sort: { order: DESC, fields: frontmatter___title }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 200)\n          id\n          frontmatter {\n            title\n            category\n          }\n          fields {\n            slug\n            prefix\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./article.scss\";\n\nconst Article = props => {\n  const { children } = props;\n\n  return <article className=\"article\">{children}</article>;\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nimport \"./list.scss\";\n\nconst List = props => {\n  const { edges } = props;\n\n  return (\n    <React.Fragment>\n      <ul className=\"ul-list\">\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li className=\"li-list\" key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired\n};\n\nexport default List;\n","import { FaArrowRight } from \"react-icons/fa/\";\nimport { FaCalendar } from \"react-icons/fa/\";\nimport { FaTag } from \"react-icons/fa/\";\nimport { FaUser } from \"react-icons/fa/\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./item.scss\";\n\nconst Item = props => {\n  const {\n    post: {\n      excerpt,\n      fields: { slug, prefix },\n      frontmatter: {\n        title,\n        category\n        // author\n        // cover: {\n        //   children: [{ fluid }]\n        // }\n      }\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <li className=\"li-item\">\n        <Link to={slug} key={slug} className=\"link\">\n          {/*<div className=\"gatsby-image-outer-wrapper\">*/}\n          {/*  <Img fluid={fluid} />*/}\n          {/*</div>*/}\n          <h1 className=\"h1-item\">\n            {title} <FaArrowRight className=\"arrow\" />\n          </h1>\n          <p className=\"item-meta\">\n            <span>\n              <FaCalendar size={18} /> {prefix}\n            </span>\n            {/*<span>*/}\n            {/*  <FaUser size={18} /> {author}*/}\n            {/*</span>*/}\n            {category && (\n              <span>\n                <FaTag size={18} /> {category}\n              </span>\n            )}\n          </p>\n          <p className=\"item-excerpt\">{excerpt}</p>\n        </Link>\n      </li>\n    </React.Fragment>\n  );\n};\n\nItem.propTypes = {\n  post: PropTypes.object.isRequired\n};\n\nexport default Item;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Item from \"./Item\";\n\nimport \"./blog.scss\";\n\nconst Blog = props => {\n  const { posts } = props;\n\n  return (\n    <React.Fragment>\n      <main className=\"main\">\n        <ul className=\"blog-ul\">\n          {posts.map(post => {\n            const {\n              node,\n              node: {\n                fields: { slug }\n              }\n            } = post;\n            return <Item key={slug} post={node} />;\n          })}\n        </ul>\n      </main>\n    </React.Fragment>\n  );\n};\n\nBlog.propTypes = {\n  posts: PropTypes.array.isRequired\n};\n\nexport default Blog;\n"],"sourceRoot":""}