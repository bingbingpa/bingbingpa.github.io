{"version":3,"sources":["webpack:///./src/components/Hero/Hero.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog/Item.js","webpack:///./src/components/Blog/Blog.js"],"names":["Hero","props","scrollToContent","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","height","window","innerHeight","width","innerWidth","texts","config","matrixTest","split","columns","drops","x","setInterval","fillStyle","fillRect","font","fontSize","i","length","text","Math","floor","random","fillText","Fragment","className","ref","onClick","aria-label","IndexPage","separator","React","createRef","scrollIntoView","block","behavior","render","this","data","posts","edges","Blog","Seo","Component","Item","post","excerpt","fields","slug","prefix","frontmatter","title","category","to","key","size","map","node"],"mappings":"6MAsDeA,G,UA/CF,SAAAC,GACX,IAAQC,EAAoBD,EAApBC,gBACFC,EAAYC,mBA6BlB,OA3BAC,qBAAU,WACR,IAAMC,EAASH,EAAUI,QACnBC,EAAMF,EAAOG,WAAW,MAC9BH,EAAOI,OAASC,OAAOC,YACvBN,EAAOO,MAAQF,OAAOG,WAAa,GAKnC,IAJA,IAAMC,EAAQC,IAAOC,WAAWC,MAAM,IAEhCC,EAAUb,EAAOO,MADN,GAEXO,EAAQ,GACLC,EAAI,EAAGA,EAAIF,EAASE,IAAKD,EAAMC,GAAK,EAe7CC,aAbA,WACEd,EAAIe,UAAY,sBAChBf,EAAIgB,SAAS,EAAG,EAAGlB,EAAOO,MAAOP,EAAOI,QACxCF,EAAIe,UAAY,OAChBf,EAAIiB,KAAOC,aACX,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAAK,CACrC,IAAIE,EAAOd,EAAMe,KAAKC,MAAMD,KAAKE,SAAWjB,EAAMa,SAClDpB,EAAIyB,SAASJ,EAZA,GAYMF,EAZN,GAYoBP,EAAMO,KAZ1B,GAaTP,EAAMO,GAAgBrB,EAAOI,QAAUoB,KAAKE,SAAW,OAAMZ,EAAMO,GAAK,GAC5EP,EAAMO,QAIQ,MACjB,IAGD,kBAAC,IAAMO,SAAP,KACE,6BAASC,UAAU,QACjB,4BAAQC,IAAKjC,EAAWgC,UAAU,WAClC,4BAAQA,UAAU,gBAAgBE,QAASnC,EAAiBoC,aAAW,UACrE,kBAAC,IAAD,W,YClCJC,G,8JACJC,UAAYC,IAAMC,Y,EAElBxC,gBAAkB,WAChB,EAAKsC,UAAUjC,QAAQoC,eAAe,CAAEC,MAAO,QAASC,SAAU,Y,sCAGpEC,OAAA,WACE,MAIIC,KAAK9C,MAHP+C,KACEC,MAASC,MAAOD,OAFpB,MAE4B,GAF5B,EAMA,OACE,kBAAC,IAAMf,SAAP,KACE,kBAAC,EAAD,CAAMhC,gBAAiB6C,KAAK7C,kBAC5B,wBAAIiC,UAAU,WAAWC,IAAKW,KAAKP,YAEnC,kBAACW,EAAA,EAAD,CAAMF,MAAOA,IACb,kBAACG,EAAA,EAAD,Q,GApBgBX,IAAMY,YA8Bfd,a,mKCqBAe,G,UAlDF,SAAArD,GACX,MAaIA,EAZFsD,KACEC,EAFJ,EAEIA,QAFJ,IAGIC,OAAUC,EAHd,EAGcA,KAAMC,EAHpB,EAGoBA,OAHpB,IAIIC,YACEC,EALN,EAKMA,MACAC,EANN,EAMMA,SASN,OACE,kBAAC,IAAM5B,SAAP,KACE,wBAAIC,UAAU,WACZ,kBAAC,OAAD,CAAM4B,GAAIL,EAAMM,IAAKN,EAAMvB,UAAU,QAInC,wBAAIA,UAAU,WACX0B,EADH,IACU,kBAAC,IAAD,CAAc1B,UAAU,WAElC,uBAAGA,UAAU,aACX,8BACE,kBAAC,IAAD,CAAY8B,KAAM,KADpB,IAC4BN,GAK3BG,GACC,8BACE,kBAAC,IAAD,CAAOG,KAAM,KADf,IACuBH,IAI3B,uBAAG3B,UAAU,gBAAgBqB,QChBxBL,G,UA1BF,SAAAlD,GACX,IAAQgD,EAAUhD,EAAVgD,MAER,OACE,kBAAC,IAAMf,SAAP,KACE,0BAAMC,UAAU,QACd,wBAAIA,UAAU,WACXc,EAAMiB,KAAI,SAAAX,GACT,IACEY,EAIEZ,EAJFY,KAEYT,EAEVH,EAHFY,KACEV,OAAUC,KAGd,OAAO,kBAAC,EAAD,CAAMM,IAAKN,EAAMH,KAAMY,a","file":"component---src-pages-index-js-04b198601b01d7ef1b07.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaArrowDown } from \"react-icons/fa/\";\nimport config from \"../../../content/meta/config\";\n\nimport \"./hero.scss\";\n\nconst Hero = props => {\n  const { scrollToContent } = props;\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth - 15;\n    const texts = config.matrixTest.split(\"\");\n    const fontSize = 12;\n    const columns = canvas.width / fontSize;\n    const drops = [];\n    for (let x = 0; x < columns; x++) drops[x] = 1;\n\n    function draw() {\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.05)\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = \"#490\";\n      ctx.font = fontSize + \"px arial\";\n      for (let i = 0; i < drops.length; i++) {\n        let text = texts[Math.floor(Math.random() * texts.length)];\n        ctx.fillText(text, i * fontSize, drops[i] * fontSize);\n        if (drops[i] * fontSize > canvas.height || Math.random() > 0.98) drops[i] = 0;\n        drops[i]++;\n      }\n    }\n\n    setInterval(draw, 33);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <section className=\"hero\">\n        <canvas ref={canvasRef} className=\"matrix\" />\n        <button className=\"button-matrix\" onClick={scrollToContent} aria-label=\"scroll\">\n          <FaArrowDown />\n        </button>\n      </section>\n    </React.Fragment>\n  );\n};\n\nHero.propTypes = {\n  scrollToContent: PropTypes.func.isRequired\n};\n\nexport default Hero;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Blog from \"../components/Blog\";\nimport Hero from \"../components/Hero\";\nimport Seo from \"../components/Seo\";\n\nimport \"./index.scss\";\n\nclass IndexPage extends React.Component {\n  separator = React.createRef();\n\n  scrollToContent = () => {\n    this.separator.current.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\n  };\n\n  render() {\n    const {\n      data: {\n        posts: { edges: posts = [] }\n      }\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Hero scrollToContent={this.scrollToContent} />\n        <hr className=\"hr-index\" ref={this.separator} />\n\n        <Blog posts={posts} />\n        <Seo />\n      </React.Fragment>\n    );\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default IndexPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query IndexQuery {\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts/[0-9]+.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n","import { FaArrowRight } from \"react-icons/fa/\";\nimport { FaCalendar } from \"react-icons/fa/\";\nimport { FaTag } from \"react-icons/fa/\";\nimport { FaUser } from \"react-icons/fa/\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./item.scss\";\n\nconst Item = props => {\n  const {\n    post: {\n      excerpt,\n      fields: { slug, prefix },\n      frontmatter: {\n        title,\n        category\n        // author\n        // cover: {\n        //   children: [{ fluid }]\n        // }\n      }\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <li className=\"li-item\">\n        <Link to={slug} key={slug} className=\"link\">\n          {/*<div className=\"gatsby-image-outer-wrapper\">*/}\n          {/*  <Img fluid={fluid} />*/}\n          {/*</div>*/}\n          <h1 className=\"h1-item\">\n            {title} <FaArrowRight className=\"arrow\" />\n          </h1>\n          <p className=\"item-meta\">\n            <span>\n              <FaCalendar size={18} /> {prefix}\n            </span>\n            {/*<span>*/}\n            {/*  <FaUser size={18} /> {author}*/}\n            {/*</span>*/}\n            {category && (\n              <span>\n                <FaTag size={18} /> {category}\n              </span>\n            )}\n          </p>\n          <p className=\"item-excerpt\">{excerpt}</p>\n        </Link>\n      </li>\n    </React.Fragment>\n  );\n};\n\nItem.propTypes = {\n  post: PropTypes.object.isRequired\n};\n\nexport default Item;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Item from \"./Item\";\n\nimport \"./blog.scss\";\n\nconst Blog = props => {\n  const { posts } = props;\n\n  return (\n    <React.Fragment>\n      <main className=\"main\">\n        <ul className=\"blog-ul\">\n          {posts.map(post => {\n            const {\n              node,\n              node: {\n                fields: { slug }\n              }\n            } = post;\n            return <Item key={slug} post={node} />;\n          })}\n        </ul>\n      </main>\n    </React.Fragment>\n  );\n};\n\nBlog.propTypes = {\n  posts: PropTypes.array.isRequired\n};\n\nexport default Blog;\n"],"sourceRoot":""}