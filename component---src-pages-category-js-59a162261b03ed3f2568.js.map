{"version":3,"sources":["webpack:///./src/components/Article/Article.js","webpack:///./src/components/List/List.js","webpack:///./src/pages/category.js","webpack:///./src/components/Article/Headline.js"],"names":["Article","props","children","className","List","edges","Fragment","map","edge","node","title","frontmatter","slug","fields","key","to","CategoryPage","posts","data","categories","forEach","category","push","categoryList","item","Headline"],"mappings":"+KAeeA,G,UAVC,SAAAC,GACd,IAAQC,EAAaD,EAAbC,SAER,OAAO,6BAASC,UAAU,WAAWD,M,yGC2BxBE,G,UA7BF,SAAAH,GACX,IAAQI,EAAUJ,EAAVI,MAER,OACE,kBAAC,IAAMC,SAAP,KACE,wBAAIH,UAAU,WACXE,EAAME,KAAI,SAAAC,GACT,MAKIA,EAJFC,KACiBC,EAFnB,EAEIC,YAAeD,MACLE,EAHd,EAGIC,OAAUD,KAId,OACE,wBAAIT,UAAU,UAAUW,IAAKF,GAC3B,kBAAC,OAAD,CAAMG,GAAIH,GAAOF,Y,yDCtB/B,kHAmEeM,UAvDM,SAAAf,GACnB,IAEoBgB,EAEhBhB,EAHFiB,KACED,MAASZ,MAKPc,EAAa,GACnBF,EAAMG,SAAQ,SAAAZ,GACZ,IAEmBa,EAEfb,EAHFC,KACEE,YAAeU,SAIfA,IACGF,EAAWE,KACdF,EAAWE,GAAY,IAEzBF,EAAWE,GAAUC,KAAKd,OAI9B,IAAMe,EAAe,GAErB,IAAK,IAAIT,KAAOK,EACdI,EAAaD,KAAK,CAACR,EAAKK,EAAWL,KAGrC,OACE,kBAAC,IAAMR,SAAP,KACE,kBAAC,IAAD,KACE,gCACE,kBAAC,IAAD,CAAUI,MAAM,yBAEjBa,EAAahB,KAAI,SAAAiB,GAAI,OACpB,6BAASV,IAAKU,EAAK,IACjB,wBAAIrB,UAAU,eACZ,kBAAC,IAAD,MADF,IACaqB,EAAK,IAElB,kBAAC,IAAD,CAAMnB,MAAOmB,EAAK,UAKxB,kBAAC,IAAD,S,gFC1DN,mCAwBeC,IAnBE,SAAAxB,GACf,IAAQS,EAAoBT,EAApBS,MAAOR,EAAaD,EAAbC,SAEf,OACE,kBAAC,IAAMI,SAAP,KACGI,EACC,wBAAIP,UAAU,eAAeO,GAE7B,wBAAIP,UAAU,eAAeD","file":"component---src-pages-category-js-59a162261b03ed3f2568.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./article.scss\";\n\nconst Article = props => {\n  const { children } = props;\n\n  return <article className=\"article\">{children}</article>;\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nimport \"./list.scss\";\n\nconst List = props => {\n  const { edges } = props;\n\n  return (\n    <React.Fragment>\n      <ul className=\"ul-list\">\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li className=\"li-list\" key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired\n};\n\nexport default List;\n","import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article/\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport Seo from \"../components/Seo\";\n\nimport \"./category.scss\";\n\nconst CategoryPage = props => {\n  const {\n    data: {\n      posts: { edges: posts }\n    }\n  } = props;\n\n  // Create category list\n  const categories = {};\n  posts.forEach(edge => {\n    const {\n      node: {\n        frontmatter: { category }\n      }\n    } = edge;\n\n    if (category) {\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(edge);\n    }\n  });\n\n  const categoryList = [];\n\n  for (var key in categories) {\n    categoryList.push([key, categories[key]]);\n  }\n\n  return (\n    <React.Fragment>\n      <Article>\n        <header>\n          <Headline title=\"Posts by categories\" />\n        </header>\n        {categoryList.map(item => (\n          <section key={item[0]}>\n            <h2 className=\"h2-category\">\n              <FaTag /> {item[0]}\n            </h2>\n            <List edges={item[1]} />\n          </section>\n        ))}\n      </Article>\n\n      <Seo />\n    </React.Fragment>\n  );\n};\n\nCategoryPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default CategoryPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query PostsQuery {\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts/[0-9]+.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./headline.scss\";\n\nconst Headline = props => {\n  const { title, children } = props;\n\n  return (\n    <React.Fragment>\n      {title ? (\n        <h1 className=\"h1-headline\">{title}</h1>\n      ) : (\n        <h1 className=\"h1-headline\">{children}</h1>\n      )}\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node\n};\n\nexport default Headline;\n"],"sourceRoot":""}